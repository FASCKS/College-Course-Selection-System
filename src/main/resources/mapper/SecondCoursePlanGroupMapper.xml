<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pxx.collegecourseselectionsystem.mapper.SecondCoursePlanGroupMapper">
    <resultMap id="BaseResultMap" type="com.pxx.collegecourseselectionsystem.entity.SecondCoursePlanGroupEntity">
        <!--@mbg.generated-->
        <!--@Table second_course_plan_group-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="year" jdbcType="INTEGER" property="year"/>
        <result column="up_or_down" jdbcType="INTEGER" property="upOrDown"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `year`, up_or_down, start_time, end_time, `state`
    </sql>
    <!--状态时间判断-->
    <sql id="state_time">
        if(now() &lt;
           scpg.start_time, 0,
           if((now() > scpg.start_time and now() &lt;
                                           scpg.end_time), 1, 2)) as state
    </sql>
    <select id="findAllGroupPlan" resultMap="BaseResultMap">
        select id,
               year,
               up_or_down,
               start_time,
               end_time,
               sum,
        <include refid="state_time">
        </include>

        from second_course_plan_group scpg
    </select>
    <resultMap id="findOneByIdMap" type="com.pxx.collegecourseselectionsystem.dto.SecondCoursePlanGroupEntityDto">
        <!--@mbg.generated-->
        <!--@Table second_course_plan_group-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="year" jdbcType="INTEGER" property="year"/>
        <result column="up_or_down" jdbcType="INTEGER" property="upOrDown"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="sum" property="sum"/>
        <collection property="secondCourseDtoList" ofType="com.pxx.collegecourseselectionsystem.dto.SecondCourseDto">
            <id column="sc_id" property="id"/>
            <result column="course_id" property="courseId"/>
            <result column="course_sum" property="courseSum"/>
            <result column="up_time" property="upTime"/>
            <result column="week" property="week"/>
            <result column="state" property="state"/>
            <result column="teacher_name" property="teacherName"/>
            <result column="course_name" property="courseName"/>
            <result column="type" property="type"/>
            <result column="plan_group_id" property="planGroupId"/>
            <result column="up_time_two" property="upTimeTwo"/>
        </collection>

    </resultMap>
    <select id="findOneById" resultMap="findOneByIdMap">
        select scpg.*
        ,   scpg.id as plan_group_id
             , sc.id as sc_id
             , sc.course_id
             , sc.teacher
             , sc.course_sum
             , sc.up_time
             , sc.week
             , sum
             ,
        <include refid="state_time">
        </include>
        , co.`name` as course_name
        , su.name   as teacher_name
        , co.type   as type
        , sc.up_time_two

                from second_course_plan_group scpg
                             left join second_course sc on scpg.id = sc.plan_group_id
                             LEFT JOIN course co ON co.id = sc.course_id
                             LEFT JOIN sys_user su on su.user_id = sc.teacher

                where su.type = 2
                  and sc.state = 1
                  and scpg.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findEndDataSum" resultType="java.lang.Integer">
        select sum
        from second_course_plan_group
        where year = #{year,jdbcType=INTEGER}
          and up_or_down = #{code,jdbcType=INTEGER}
        order by sum desc
        limit 1
    </select>
</mapper>