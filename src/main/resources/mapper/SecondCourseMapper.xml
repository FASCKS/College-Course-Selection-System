<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pxx.collegecourseselectionsystem.mapper.SecondCourseMapper">
    <resultMap id="BaseResultMap" type="com.pxx.collegecourseselectionsystem.entity.SecondCourse">
        <!--@mbg.generated-->
        <!--@Table second_course-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="course_id" jdbcType="INTEGER" property="courseId"/>
        <result column="teacher" jdbcType="BIGINT" property="teacher"/>
        <result column="course_sum" jdbcType="INTEGER" property="courseSum"/>
        <result column="up_time" jdbcType="INTEGER" property="upTime"/>
        <result column="week" jdbcType="INTEGER" property="week"/>
        <result column="plan_group_id" jdbcType="INTEGER" property="planGroupId"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, course_id, teacher, course_sum, up_time, week, start_time, end_time,plan_group_id
    </sql>


    <select id="findAllSecondCourse" resultType="com.pxx.collegecourseselectionsystem.dto.SecondCourseDto">
        SELECT cs.id,
               co.`name`            as course_name,
               co.id                as course_id,
               su.name              as teacher_name,
               ct.name              as type,
               cs.up_time,
               su.user_id           as teacher,
               cs.up_time           as up_time_number,
               cs.up_time_two       as up_time_two_number,
               cs.week              as week_number,
               cs.week,
               cs.classroom_id      as classroom_id,
               scpg.start_time,
               scpg.end_time,
               cs.course_sum,
               cs.plan_group_id,
               cs.up_time_two,
               cs.course_sum        as total_sum,
               co.online_class      as online_class,
               cr.roof_name,
               cr.roof_number,
               cr.id                as roof_id,
               cl.floor,
               cl.`between`,
               cl.`between_type_id` as between_id,
               cb.between_type

        FROM second_course cs
                     LEFT JOIN course co ON co.id = cs.course_id
                     left join course_type ct on ct.id = co.type
                     LEFT JOIN sys_user su on su.user_id = cs.teacher
                     left join second_course_plan_group scpg on cs.plan_group_id = scpg.id
                     LEFT JOIN classroom cl ON cl.id = cs.classroom_id
                     left join classroom_roof cr on cr.id = cl.roof_type_id
                     left join classroom_between cb on cb.id = cl.between_type_id
        where su.type = 2

          and scpg.id = #{planGroupId,jdbcType=INTEGER}
    </select>

    <select id="findOneByCourseIdAndUpTimeAndWeek"
            resultType="com.pxx.collegecourseselectionsystem.dto.SecondCourseDto">
        select *
        from second_course sc
        where course_sum = #{courseId,jdbcType=INTEGER}
          and up_time = #{upTime}
          and week = #{week}
    </select>

    <select id="findAllOrderCourseAndSecondCourseData"
            resultType="com.pxx.collegecourseselectionsystem.entity.ClassSchedule">
        select sc.course_id, sc.up_time, sc.week, oc.user_id, su.unit_id as unit, sc.teacher, now() as create_time
        from second_course sc
                     left join order_course oc on sc.id = oc.second_course_id
                     left join sys_user su on oc.user_id = su.user_id
                     left join sys_unit s on su.unit_id = s.unit_id

        where su.type in (0, 1, 2)
    </select>
    <select id="findAllOrderCourseAndSecondCourseDataTwo"
            resultType="com.pxx.collegecourseselectionsystem.entity.ClassSchedule">
        select sc.course_id,
               sc.up_time_two as up_time,
               sc.week,
               oc.user_id,
               su.unit_id     as unit,
               sc.teacher,
               now()          as create_time
        from second_course sc
                     left join order_course oc on sc.id = oc.second_course_id
                     left join sys_user su on oc.user_id = su.user_id
                     left join sys_unit s on su.unit_id = s.unit_id
        where su.type in (0, 1, 2)
          and sc.up_time_two > 0
    </select>

    <select id="findCountByUserId" resultType="java.lang.Integer">
        select count(1)
        from second_course sc  where sc.teacher in
        <foreach collection="collection" close=")" open="(" item="item" separator="," index="index" nullable="true">
            #{item,jdbcType=BIGINT}
        </foreach>
    </select>
</mapper>